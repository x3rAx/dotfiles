# Set prefix
    unbind C-b
    set -g prefix C-Space
    bind C-Space send-prefix


# Enable mouse mode
    set -g mouse on


# Start windows and panes at index 1, not 0
    set -g base-index 1
    set -g pane-base-index 1
    set-window-option -g pane-base-index 1
    set-option -g renumber-windows on


# Fix colors within tmux (The `Tc` setting)
    # `terminal-overrides` affect how tmux interacts with the outsied terminal
    # not how applications inside tmux behave.
    set-option -sa terminal-overrides ",alacritty*:Tc,xterm*:Tc"


# Enable extended-keys
    # To enable extended keys, an application must send an escape sequence to
    # the terminal it is running in. However, tmux does not forward this
    # request to the parent terminal, so the terminal has two choises: Never
    # send special keys or always send them.
    #
    # When setting `extended-keys` to `on`, tmux forwards the extended keys to
    # the application only if the application requested them. Setting it to
    # `always` always passes them to the application.
    #
    # I went for the approach to always send them. This has the side effect,
    # that some applications may not work as expected. I'll see how it goes.
    set -s extended-keys always


# Update environment when creating or attaching to session (for new windows only)
    # See https://babushk.in/posts/renew-environment-tmux.html to learn how to
    # auto-update the environment in a running shell session.
    set-option -g update-environment "SSH_AUTH_SOCK SSH_CONNECTION DISPLAY"


# Fast window switching
    bind -n M-. next-window
    bind -n M-, previous-window
    bind -n M-/ last-window


# Fast pane switching (including vim integration)
    set -g @vim_navigator_mapping_left "M-h"
    set -g @vim_navigator_mapping_right "M-l"
    set -g @vim_navigator_mapping_up "M-k"
    set -g @vim_navigator_mapping_down "M-j"
    set -g @vim_navigator_mapping_prev "M-\\"
    set -g @vim_navigator_prefix_mapping_clear_screen ""

    # Allow sending the keys anyways
    bind "M-h" send "M-h"
    bind "M-l" send "M-l"
    bind "M-k" send "M-k"
    bind "M-j" send "M-j"
    bind "M-\\" send "M-\\"


# Fast session switching
    bind -r ( switch-client -p
    bind -r ) switch-client -n


# Open panes/windows in current directory
    bind '"' split-window -v -c "#{pane_current_path}"
    bind '%' split-window -h -c "#{pane_current_path}"
    bind 'c' new-window -c "#{pane_current_path}"


# Fix Ctrl+/ in Nvim
    bind -n C-_ send-keys C-/


# Fix Esc+Key is interpreted as Alt+Key
    bind -n Escape send Escape \; run-shell 'sleep 0.05'


# Create and move windows with mouse
    # Open new window with double click on status bar
    bind -n DoubleClick1StatusDefault new-window -a -t ":$"
    # First mark the current window if it isnt. Then, when mouse hovers over
    # another window, select that window and swap it with the marked one.
    bind -n MouseDrag1Status if '[ #{pane_marked_set} -ne 1 ]' \
        'select-pane -m -t=' \
        'select-window -t= ; swap-window'
    # When releasing the mouse, remove mark
    bind -n MouseDragEnd1Status select-pane -M
    bind -n MouseDragEnd1StatusLeft select-pane -M
    bind -n MouseDragEnd1StatusRight select-pane -M
    bind -n MouseDragEnd1StatusDefault select-pane -M

#
# Resize panes
    unbind -T prefix C-l
    bind -r C-h resize-pane -L
    bind -r C-j resize-pane -D
    bind -r C-k resize-pane -U
    bind -r C-l resize-pane -R


# Set VI-mode
    set-window-option -g mode-keys vi
    bind -T copy-mode-vi 'v' send-keys -X begin-selection
    bind -T copy-mode-vi 'C-v' send-keys -X rectangle-toggle


# Set status position to top
    set-option -g status-position top


# Open help pages
    # Tmux manual
    bind M-? new-window -t 0 -n 'TMUX' "man tmux"
    unbind -T prefix ?
    bind ? command-prompt \
        -p "[m] Tmux man page; [k] List keys; [K] List all keys : " \
        'run "$HOME/.config/tmux/scripts/help.sh %%"'


# Increase repeat time to give more time for e.g. resizing panes
    set-option -g repeat-time 1000


# Set up Catpuccin
    set -g @catppuccin_flavor "mocha"
    set -g @catppuccin_window_status_style "rounded"

    # Make the status line pretty and add some modules
    set -g status-right-length 100
    set -g status-left-length 100
    set -g status-left ""
    set -g status-right "#{E:@catppuccin_status_application}"
    # set -agF status-right "#{E:@catppuccin_status_cpu}"
    set -ag status-right "#{E:@catppuccin_status_session}"
    # set -ag status-right "#{E:@catppuccin_status_uptime}"
    # set -agF status-right "#{E:@catppuccin_status_battery}"


# List of plugins (Install with 'PREFIX + I')
    set -g @plugin 'tmux-plugins/tpm'
    set -g @plugin 'tmux-plugins/tmux-sensible'
    set -g @plugin 'christoomey/vim-tmux-navigator'
    set -g @plugin 'catppuccin/tmux'
    set -g @plugin 'tmux-plugins/tmux-yank'

    # Other examples:
    # set -g @plugin 'github_username/plugin_name'
    # set -g @plugin 'github_username/plugin_name#branch'
    # set -g @plugin 'git@github.com:user/plugin'
    # set -g @plugin 'git@bitbucket.com:user/plugin'


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'

