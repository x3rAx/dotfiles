[Commands]
1\Command="copyq:\nvar cmd = dialog(\" \")\n\nif (isNumeric(cmd)) {\n  selectItems(cmd)\n}\n\n////////////////////////////////////////////////////////////////\n\nfunction isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}"
1\Icon=\xf15b
1\InMenu=true
1\Name=VI: Command
1\Shortcut=:
10\Command=copyq: plugins.itempinned.pin()
10\Icon=\xf08d
10\InMenu=true
10\Input=!OUTPUT
10\Name=Pin
10\Output=application/x-copyq-item-pinned
11\Command=copyq: plugins.itempinned.unpin()
11\Icon=\xf08d
11\InMenu=true
11\Input=application/x-copyq-item-pinned
11\Name=Unpin
12\Command=copyq: plugins.itemtags.tag(decodeURIComponent('Important'))
12\Icon=\xf02b
12\InMenu=true
12\MatchCommand=copyq: plugins.itemtags.hasTag(decodeURIComponent('Important')) && fail()
12\Name=Tag as \x201cImportant\x201d
13\Command=copyq: plugins.itemtags.untag(decodeURIComponent('Important'))
13\Icon=\xf02b
13\InMenu=true
13\MatchCommand=copyq: plugins.itemtags.hasTag(decodeURIComponent('Important')) || fail()
13\Name=Remove tag \x201cImportant\x201d
14\Command=copyq: plugins.itemtags.tag()
14\Icon=\xf02b
14\InMenu=true
14\Name=Add a Tag
15\Command=copyq: plugins.itemtags.untag()
15\Icon=\xf02b
15\InMenu=true
15\Input=application/x-copyq-tags
15\Name=Remove a Tag
16\Command=copyq: plugins.itemtags.clearTags()
16\Icon=\xf02b
16\InMenu=true
16\Input=application/x-copyq-tags
16\Name=Clear all tags
17\Automatic=true
17\Icon=\xf15b
17\Input=application/x-copyq-clipboard-mode
17\Name=Store Primary Selection
17\Tab=&Primary
2\Command="copyq:\n\nvar WRAP = false\n\nvar len = size()\n//var selected = selectedItems()\n//var idx = selected.length > 0 ? selected[0] : len\nvar idx = currentItem()\n\nidx++\nif (WRAP && idx >= len) {\n    idx = 0;\n}\n\nselectItems(idx)"
2\Icon=\xf358
2\InMenu=true
2\Name=VI: Next
2\Shortcut=ctrl+n, ctrl+\\
3\Command="copyq:\n\nvar WRAP = false\n\nvar len = size()\n//var selected = selectedItems()\n//var idx = selected.length > 0 ? selected[0] : len\nvar idx = currentItem()\n\nidx--\nif (WRAP && idx < 0) {\n    idx = len - 1\n}\n\nselectItems(idx)"
3\Icon=\xf35b
3\InMenu=true
3\Name=VI: Previous
3\Shortcut=ctrl+p
4\Command="copyq:\n\nif (!visible()) {\n  // Show main window\n  showAt()\n} else {\n  // Select next item:\n  var WRAP = false;\n\n  var len = size();\n  var idx = currentItem();\n\n  idx++;\n  if (WRAP && idx >= len) {\n    idx = 0;\n  }\n\n  selectItems(idx);\n}\n"
4\GlobalShortcut=ctrl+'
4\Icon=\xf022
4\InMenu=true
4\IsGlobalShortcut=true
4\Name=Toggle main window at cursor
5\Command=sleep 1\nsh -c 'xdotool type --clearmodifiers -- \"$(copyq clipboard)\"'
5\GlobalShortcut=meta+ctrl+alt+shift+v
5\Icon=\xf15b
5\IsGlobalShortcut=true
5\Name=Type clipboard contents
6\Command="copyq:\n\nvar txt = str(data(\"text/plain\"))\nvar newTxt = txt.replace(new RegExp(' ', 'g'), \"\\n\")\nif (txt != newTxt)\n    copy(newTxt)"
6\Icon=\xf15b
6\Name=Space to Linebreak
7\Enable=false
7\Name=----- Cli Extensions -----
8\Command="// --- Config --- ///\n\nconst WRAP = false\nconst TAB = \"Clipboard\"\n\n// --- /Config --- ///\n\n\nglobal.show_next = function() {\nlet debug = \"\"\n\n  if (typeof settings(\"x3ro.selected_item\") === \"undefined\") {\n    settings(\"x3ro.selected_item\", -1)\n  }\n\n  let idx = settings(\"x3ro.selected_item\")\n\n  if (!visible()) {\n    idx = -1\n    tab(TAB)\n    showAt()  // Show main window\ndebug += 'showAt()' + \"\\n\"\n  }\n\n  let len = size()\ndebug += 'idx: ' + idx + \"\\n\"\ndebug += 'len: ' + len + \"\\n\"\n\n  idx++\n  if (idx >= len) {\ndebug += 'reached end: ' + idx + ' >= ' + len + \"\\n\"\n    idx = len;\n    if (WRAP) {\ndebug += 'WRAP' + \"\\n\"\n      idx = 0\n    }\n  }\n\ndebug += 'select: ' + idx + \"\\n\"\n\n  settings(\"x3ro.selected_item\", idx)\n\n  tab(TAB)\n  selectItems(idx) // Do not use select(), it moves the item to the top\n\n//notification('.title', 'show_next', '.message', debug)\n}"
8\Icon=\xf15b
8\IsScript=true
8\Name=show_next
9\Enable=false
9\Name=--------------------------------
size=17
