#!/usr/bin/env bash

USAGE='
  Usage:
    create-bash <file>
'

if [[ $1 =~ ^-h|--help$ ]]; then 
    echo "$USAGE"
    exit
fi

if [[ -e "$1" ]]; then
    echo >&2 "ERROR: The path \`$1\` already exists."
    exit 1
fi

cat >"$1" <<EOF
#!/usr/bin/env bash

# More safety by turning bugs into errors.
# Use \`\${PIPESTATUS[n]}\` to check for the \`n\`-th pipe command's exit status.
# Make sure there are no uninitialized variables.
# To allow a non-zero exit status or to allow a pipe to fail without exiting
# the script, prefix the command with \`!\`.
# Option \`noclobber\` makes sure piping into a file with \`>\` does not
# override existing files. Use \`>|\` to overwrite files instead.
# Environment variables are \`UPPER_SNAKE_CASE\`, global constants are
# \`_UNDERSCORE_PREFIXED\` and global variables are \`_underscore_prefixed\`
set -o errexit -o pipefail -o nounset -o noclobber

: \${XDG_CONFIG_HOME:=\$HOME/.config}
: \${XDG_CACHE_HOME:=\$HOME/.cache}

readonly _SCRIPT="\$(realpath "\$0")"
readonly _SCRIPT_NAME="\${_SCRIPT##*/}"
readonly _SCRIPT_DIR="\${_SCRIPT%/*}"

err() { echo >&2 "\${_SCRIPT_NAME}: \$@"; }

readonly _ERR_USAGE=2
readonly _ERR_PROGRAMMING=255

readonly _USAGE="
  Usage:
    \$_SCRIPT_NAME <options> <arguments>

  OPTIONS:
    -h, --help              Show this help message.
    -c, --config <file>     Use an alternative config file
"

readonly _OPTIONS='hc:'
readonly _LONGOPTS='help,config:'

parsed="\$(getopt -o "\$_OPTIONS" -l "\$_LONGOPTS" -n "\$_SCRIPT_NAME" -- "\$@")"
if [[ \${PIPESTATUS[0]} -ne 0 ]]; then echo >&2 "\$_USAGE"; exit \$_ERR_USAGE; fi
eval set -- "\${parsed[@]}"; unset parsed

_config="\${XDG_CONFIG_HOME}/\${_SCRIPT_NAME}.conf"

while [[ \$# -gt 0 ]]; do
    case \$1 in
        -h|--help)      echo "\$_USAGE"; exit; ;;
        -c|--config)    _config="\$2"; shift 2; ;;
        --)             shift; break; ;;
        *)              err "Programming error"; exit \$_ERR_PROGRAMMING; ;;
    esac
done

# --- main program -------------------------------------------------------------

EOF

chmod +x -- "$1"
${EDITOR} -- "$1"
