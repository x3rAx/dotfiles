#!/usr/bin/env bash

set -eu

main() {
	# Update channels (legacy)
	run sudo nix-channel --update
	run nix-channel --update

	# TODO: Commit flake.lock after update

	# Update system
	run-if /etc/nixos/flake.nix \
		sudo flake update /etc/nixos
	run sudo nixos-rebuild switch

	# Update home-manager
	run-if ~/.config/home-manager/flake.nix \
		nix flake update ~/.config/home-manager/
	run-if - home-manager switch

	#run nix-env --upgrade

	# Other package managers
	run-if - flatpak update

	# Single app updates
	run-if - lug-helper-update
	run-if - starship-update
	run-if - youtube-dl-update

	echo ""
	echo ""
	echo "+------------------------------------------------------------------------------+"
	echo "|  NOTE                                                                        |"
	echo "|  ====                                                                        |"
	echo "|                                                                              |"
	echo "|  Remember to commit ~/.config/home-manager/flake.lock                        |"
	echo "|                                                                              |"
	echo "|  $ yadm add ~/.config/home-manager/flake.lock                                |"
	echo "|  $ yadm cimp 'Update home-manager flake.lock'                                |"
	echo "+------------------------------------------------------------------------------+"
	echo ""
}

################################################################################

_bold=$(tput bold)
_normal=$(tput sgr0)
_yellow=$(tput setaf 11)
_red=$(tput setaf 1)
_teal=$(tput setaf 14)
_green=$(tput setaf 10)

run() {
	local err=0
	echo >&2 "${_bold}${_yellow}==> RUN: ${*}${_normal}"

	while :; do
		err=0
		"$@" || err=$?

		if [[ $err -ne 0 ]]; then
			echo >&2 ""
			echo >&2 "${_bold}${_red}ERROR: Command \`${*}\` exited with an exit code of ${err}.${_normal}"
			echo >&2 "${_bold}       Do you want to continue, retry or quit? (C/r/q) ${_normal}"
			read inp

			if [[ ${inp,,} == 'r' ]]; then
				continue
			fi

			if [[ -n $inp ]] && [[ ${inp,,} != 'c' ]]; then
				exit $err
			fi
		fi
		break
	done
}

# Usage:
#   run-if command-to-check command-to-run arg1 arg2
#   run-if - command-to-check-and-run arg1 arg2
run-if() {
	local check=$1
	shift
	if [[ $check == '-' ]]; then
		check=$1
	fi
	if ! command -v "$1" >/dev/null; then
		echo >&2 "${_bold}${_teal}==> SKIPPING (missing ${check}): ${@}${_normal}"
		return
	fi
	run "$@"
}

finish() {
	local code=$?
	echo ''
	if [[ $code -gt 0 ]]; then
		echo >&2 "${_bold}${_red}ERROR: Update exited with code: ${code}${_normal}"
		exit
	fi
	echo >&2 "${_bold}${_green}==> Done${_normal}"
}
trap finish EXIT

sudo true
main "$@"
